# -*- coding: utf-8 -*-
"""
Django settings for my_site project.

Generated by 'django-admin startproject' using Django 1.8.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=pa+uh=d239r1yv&t(j#81&+^$42$d4!-@c04!jf$m_y1(bprk'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django_comments',
#    'djangocms',
#    'polls',
    'mptt',
    'tagging',
    'zinnia_bootstrap',
    'ckeditor_uploader',
    'ckeditor',
    'zinnia',
    'zinnia_ckeditor',
    'ueditor',
#    'cmsplugin_zinnia',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'my_site.urls'
#ROOT_URLCONF = 'demo_zinnia_ckeditor.urls'
#TEMPLATE_DIRS = (
# 'D:/Django/my_site/templates',
#)


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
#        'APP_DIRS': True,#app_dirs must not be set when loaders is defined.
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.i18n',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'zinnia.context_processors.version', # Optional
#                'django.template.loaders.eggs.Loader',#
            ],
            'loaders': [
             'app_namespace.Loader',
             'django.template.loaders.filesystem.Loader',
             'django.template.loaders.app_directories.Loader',
            ],
        },

    },
]

WSGI_APPLICATION = 'my_site.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/
#LANGUAGES = (
#    ('bg', gettext('Bulgarian')),
#    ('en-us', gettext('English')),
#)
#LANGUAGE_CODE = 'en-us'
# Default language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'en-us'

# This is defined here as a do-nothing function because we can't import
# django.utils.translation -- that module depends on the settings.
gettext_noop = lambda s: s

# here is all the languages supported by the CMS
PAGE_LANGUAGES = (
    ('de', gettext_noop('German')),
    ('fr-ch', gettext_noop('Swiss french')),
    ('en-us', gettext_noop('US English')),
)

# copy PAGE_LANGUAGES
languages = list(PAGE_LANGUAGES)

# redefine the LANGUAGES setting in order to be sure to have the correct request.LANGUAGE_CODE
LANGUAGES = languages

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

SITE_ID = 1
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/


STATIC_ROOT = ''
STATIC_URL  = '/static/'
#STATICFILES_DIRS = (
#    os.path.join(BASE_DIR, "static"),
#)
#MEDIA_ROOT	'D:\\Django\\my_site\\media'
MEDIA_ROOT  =   os.environ.get('MEDIA_ROOT',os.path.join(BASE_DIR, 'media'))
MEDIA_URL="/media/"    #this can set freely

ZINNIA_ENTRY_CONTENT_TEMPLATES = [
    ('zinnia/_short_entry_detail.html', 'Short entry template'),
]

ZINNIA_ENTRY_DETAIL_TEMPLATES = [
    ('zinnia/fullwidth_entry_detail.html', 'Fullwidth template'),
]

#cmsplugin_zinnia
#ZINNIA_ENTRY_BASE_MODEL='cmsplugin_zinnia.placeholder.EntryPlaceholder'


#CMSPLUGIN_ZINNIA_APP_URLS=['zinnia.urls']

#CMSPLUGIN_ZINNIA_APP_MENUS=['cmsplugin_zinnia.menu.EntryMenu',
#     'cmsplugin_zinnia.menu.CategoryMenu',
#     'cmsplugin_zinnia.menu.TagMenu',
#     'cmsplugin_zinnia.menu.AuthorMenu']

#CMSPLUGIN_ZINNIA_HIDE_ENTRY_MENU = True


#CMSPLUGIN_ZINNIA_TEMPLATES = []
#
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Full',
        'skin': 'moono',
#        'skin': 'office2013',
    },
    'zinnia-content': {
        'toolbar_Zinnia': [
            ['Cut', 'Copy', 'Paste', 'PasteFromWord', 'PasteText'],
            ['Undo', 'Redo'],
            ['Scayt','Link', 'Unlink', 'Anchor'],
            ['Image', 'Table', 'HorizontalRule', 'SpecialChar'],
			['TextColor', 'BGColor'],
            ['Source'],['showblocks'],['language'],['codesnippet'],['Maximize','Bold', 'Italic', 'Underline', 'Strike',
             'Subscript', 'Superscript', '-', 'RemoveFormat'],'/',
            ['Styles', 'Format', 'Font', 'FontSize'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-',
'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl',
'Language','lineheight'],
            
        ],
        'toolbar': 'Zinnia',
#        'skin': 'moonocolor',
#		'skin': 'office2013',
		'language' : 'zh-cn',
		#'font_names'= u('Î¢ÈíÑÅºÚ/Î¢ÈíÑÅºÚ'),
		'extraPlugins': ','.join(
           [
           # you extra plugins here
           'uploadwidget',
           'uploadimage',
           'filetools',
#           'pastefromword',
#           'imagepaste',
            'clipboard',	
#           'lineheight',
           ]),
        'imageUploadUrl': '/media/uploads/',  #codragon
        'filebrowserImageUploadUrl': '/media/uploads/',  #codragon
        'uploadUrl': '/media/uploads/',
    },
}

CKEDITOR_UPLOAD_PATH = "uploads/"
CKEDITOR_CONFIGS4 = {
    'default': {
        'toolbar': 'Custom',
        'toolbar_Custom': [
        ['Bold', 'Italic', 'Underline', 'codesnippet'],
        ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
        ['Link', 'Unlink'],
        ['RemoveFormat', 'Source'],
        ['clipboard', 'codesnippet', 'desnippetgeshi'],
        ],
    },
    'awesome_ckeditor': {
    'toolbar': 'Basic',
},
}
#CKEDITOR_RESTRICT_BY_USER = TRUE
CKEDITOR_UPLOAD_SLUGIFY_FILENAME= False
CKEDITOR_IMAGE_BACKEND = "pillow"

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': '/debug.log',
        },
	'console': {
            'class': 'logging.StreamHandler',
		},		
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}
